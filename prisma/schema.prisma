// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TaxType {
  Tax
  Fee_And_Charges
}

enum TaxValueType {
  Fixed
  Percent
}

model Country {
  id            Int       @id @default(autoincrement())
  uuid          String    @unique @default(uuid())
  country_name  String    @db.VarChar(100)
  iso_code      String    @unique @db.VarChar(50)
  mobile_code   Int       @db.SmallInt()
  currency_code String    @db.VarChar(10)
  is_active     Boolean   @default(false)
  created_at    DateTime  @default(now())
  created_by    Int?
  updated_at    DateTime  @updatedAt
  updated_by    Int?
  is_deleted    Boolean   @default(false)
  deleted_at    DateTime?
  deleted_by    Int?
  states        State[]

  @@map("countries")
}

model State {
  id         Int       @id @default(autoincrement())
  uuid       String    @unique @default(uuid())
  country_id Int
  country    Country   @relation(fields: [country_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  image      String?   @db.VarChar(255)
  state_name String    @db.VarChar(100)
  short_code String    @unique @db.VarChar(50)
  is_active  Boolean   @default(false)
  created_at DateTime  @default(now())
  created_by Int?
  updated_at DateTime  @updatedAt
  updated_by Int?
  is_deleted Boolean   @default(false)
  deleted_at DateTime?
  deleted_by Int?
  cities     City[]

  @@unique([country_id, state_name])
  @@map("states")
}

model City {
  id         Int       @id @default(autoincrement())
  uuid       String    @unique @default(uuid())
  state_id   Int
  state      State     @relation(fields: [state_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  image      String?   @db.VarChar(255)
  city_name  String    @db.VarChar(100)
  is_active  Boolean   @default(false)
  created_at DateTime  @default(now())
  created_by Int?
  updated_at DateTime  @updatedAt
  updated_by Int?
  is_deleted Boolean   @default(false)
  deleted_at DateTime?
  deleted_by Int?

  @@unique([state_id, city_name])
  @@map("cities")
}

model Tax {
  id          Int          @id @default(autoincrement())
  uuid        String       @unique @default(uuid())
  tax_name    String       @unique @db.VarChar(100)
  description String       @db.VarChar(255)
  tax_type    TaxType
  value_type  TaxValueType
  tax_value   Decimal      @db.Decimal(65, 2)
  is_active   Boolean      @default(false)
  created_at  DateTime     @default(now())
  created_by  Int?
  updated_at  DateTime     @updatedAt
  updated_by  Int?
  is_deleted  Boolean      @default(false)
  deleted_at  DateTime?
  deleted_by  Int?

  @@map("taxes")
}

model ContactUs {
  id             Int              @id @default(autoincrement())
  uuid           String           @unique @default(uuid())
  email          String           @db.VarChar(25)
  name           String           @db.VarChar(100)
  user_message   String
  is_active      Boolean          @default(false)
  replied_at     DateTime?
  created_at     DateTime         @default(now())
  created_by     Int?
  updated_at     DateTime         @updatedAt
  updated_by     Int?
  is_deleted     Boolean          @default(false)
  deleted_at     DateTime?
  deleted_by     Int?
  ContactUsReply ContactUsReply[]

  @@map("contact_us")
}

model ContactUsReply {
  id            Int        @id @default(autoincrement())
  uuid          String     @unique @default(uuid())
  contact_us_id Int
  user_message  String
  replied_at    DateTime?
  created_at    DateTime   @default(now())
  created_by    Int?
  updated_at    DateTime   @updatedAt
  updated_by    Int?
  is_deleted    Boolean    @default(false)
  deleted_at    DateTime?
  deleted_by    Int?
  ContactUs     ContactUs? @relation(fields: [contact_us_id], references: [id])

  @@map("contact_us_replies")
}

model Brand {
  id                 Int          @id @default(autoincrement())
  uuid               String       @unique @default(uuid())
  image              String?      @db.VarChar(255)
  brand_name         String       @unique @db.VarChar(25)
  is_active          Boolean      @default(false)
  brand_associations Decimal?     @default(0)
  created_at         DateTime     @default(now())
  created_by         Int?
  updated_at         DateTime     @updatedAt
  updated_by         Int?
  is_deleted         Boolean      @default(false)
  deleted_at         DateTime?
  deleted_by         Int?

  @@map("brands")
}

model Division {
  id            Int       @id @default(autoincrement())
  uuid          String    @unique @default(uuid())
  division_name String    @unique @db.VarChar(25)
  slug          String    @unique @db.VarChar(255)
  is_active     Boolean   @default(false)
  created_at    DateTime  @default(now())
  created_by    Int?
  updated_at    DateTime  @updatedAt
  updated_by    Int?
  is_deleted    Boolean   @default(false)
  deleted_at    DateTime?
  deleted_by    Int?

  @@map("divisions")
}
